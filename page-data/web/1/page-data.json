{"componentChunkName":"component---src-templates-post-template-tsx","path":"/web/1","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"html":"<h2>고민거리</h2>\n<ol>\n<li>\n<p>클라이언트에서 서버랑 소켓 연결한 뒤 메세지 보내고 가만히 있으면 계속 메세지를 수신하는데, 그렇다는 건 서버에서 메세지 내려주는 시기를 정해야 된다는 것. 그렇다면, 그 시기를 어떻게 잡을까?</p>\n<p><strong><em>→ 웹소켓 서버가 레디스를 섭스크라이브하고 있어서 데몬이 그 레디스에 퍼블리쉬 할 때, 웹소켓 서버는 레디스 채널에 퍼블리쉬 된 정보가 어떤 종류(ticket, orderbook, trade)고 어떤 마켓(btcusd 등)인지 판단해서 해당하는 메세지 요청했던 클라이언트한테 전부 해당 메세지를 보내줘야 된다고 판단함.</em></strong></p>\n</li>\n<li>\n<p>그 메세지를 요청한 클라이언트들 파악은 어떻게?</p>\n<p><strong><em>→ 클라이언트에서 서버와 소켓 커넥팅 한 뒤, 메세지를 요청하면 어떤 클라이언트가 어떤 메세지들을 요청했는지 리스트에 추가하여 상태(리스트) 유지. (리스트는 크게 두가지로 구성함. 레디스 채널명을 key로 하고 클라이언트(ip, socket)를 value로 하는 Map 하나랑, 클라이언트(ip, socket)를 key로 하고 해당 클라가 요청한 메시지들을 value로 하는 Map 하나.)</em></strong></p>\n</li>\n<li>\n<p>상태를 유지하는 게 맞는가? 아니라면 어떻게 해야 할까?</p>\n<p><strong><em>→ 딱히 방법이 떠오르지 않음. 이렇게 한다라고 했을 때, 더 고민해 볼 거리는 상태를 레디스나 디비로 관리할 지 정도? (redis subscribe가 아마 정말 빈번하게 발생될 거라 생각해서 오버헤드가 걱정돼서 지금은 이걸 변수로 뒀음)</em></strong></p>\n</li>\n<li>\n<p>데몬들이 redis에 publish 했을 때, 웹소켓 서버가 subscribe하려면 레디스 채널들 전부 subscribe하고 있어햐 됨. 지금은 서버 시작할 때, 미리 정의 해놓은 배열(socket type이랑 market) 돌면서 모든 채널들에 대해서 subscribe를 전부 실행시킴. 근데 이렇게 되면 새로운 코인 상장할 때 서버를 껐다 켜야되는 문제가 있음.</p>\n<p><strong><em>→ 채널들 리프레쉬 시키는 api 하나 구현해서 관리자가 상장할때 웹소켓 서버에 이 api 호출 시켜야 하나..? socket type이랑 market들을 상수가 아니라 디비에 넣어놓고..? 일단 구현하지 않고 MR 보내논 상태.</em></strong></p>\n</li>\n</ol>","title":"WebSocket을 이용한 WebSocket Server 구현","date":"2019-10-25 11:00:03","excerpt":"고민거리 클라이언트에서 서버랑 소켓 연결한 뒤 메세지 보내고 가만히 있으면 계속 메세지를 수신하는데, 그렇다는 건 서버에서 메세지 내려주는 시기를 정해야 된다는 것. 그렇다면, 그 시기를 어떻게 잡을까? → 웹소켓 서버가 레디스를 섭스크라이브하고 있어서 데몬이 그 레디스에 퍼블리쉬 할 때, 웹소켓 서버는 레디스 채널에 퍼블리쉬 된 정보가 어떤 종류(tic…"}}}