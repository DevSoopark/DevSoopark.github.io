{"componentChunkName":"component---src-templates-post-template-tsx","path":"/blockchain/2","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"html":"<p>이번편에서는 각 상황마다의 유저 계좌의 변화를 공식으로 정리해보며 의사코드를 작성해보고자 합니다.<br/><br/></p>\n<h2>Case 1. 매도가 먼저 있을 때.</h2>\n<p>tradeVolume = min(askOrder.volume, bidOrder.volume)<br/>\ntradePrice = askOrder.price<br/>\ndifferencePrice = bidOrder.price - tradePrice<br/>\nfee = bidOrder.unit.fee</p>\n<h2><em>1-1. 매도의 volume이 더 클 때.</em></h2>\n<ul>\n<li>1st. <em>User1</em>이 <em>ETH</em>를 <em>0.2BTC</em>에 <em>100개</em> <em>매도</em></li>\n<li>2nd. <em>User2</em>가 <em>ETH</em>를 <em>0.3BTC</em>에 <em>80개</em> <em>매수</em></li>\n</ul>\n<h3>오더 발생 후</h3>\n<p>askOrder.user.Account.askUnit.balance -= askOrder.volume<br/>\naskOrder.user.Account.askUnit.locked += askOrder.volume<br/>\nbidOrder.user.Account.bidUnit.balance -= bidOrder.volume * bidOrder.price * (1 + fee)<br/>\nbidOrder.user.Account.bidUnit.locked += bidOrder.volume * bidOrder.price * (1 + fee)</p>\n<h3>거래 체결 후</h3>\n<p>askOrder.user.Account.askUnit.locked -= tradeVolume<br/>\naskOrder.user.Account.bidUnit.balance += tradeVolume * tradePrice * (1 - fee)<br/>\nbidOrder.user.askUnit.balance += tradeVolume<br/>\nbidOrder.user.bidUnit.balance += differencePrice * tradeVolume * (1 + fee)<br/>\nbidOrder.user.bidUnit.locked -= (tradeVolume * tradePrice * (1 + fee) + differencePrice * tradeVolume * (1 + fee))</p>\n<h2>1-<em>2. 매수의 volume이 더 클 때.</em></h2>\n<ul>\n<li>1st. <em>User1</em>이 <em>ETH</em>를 <em>0.2BTC</em>에 <em>80개</em> <em>매도</em></li>\n<li>2nd. <em>User2</em>가 <em>ETH</em>를 <em>0.3BTC</em>에 <em>100개</em> <em>매수</em></li>\n</ul>\n<h3>오더 발생 후</h3>\n<p>askOrder.user.Account.askUnit.balance -= askOrder.volume<br/>\naskOrder.user.Account.askUnit.locked += askOrder.volume<br/>\nbidOrder.user.Account.bidUnit.balance -= bidOrder.volume * bidOrder.price * (1 + fee)<br/>\nbidOrder.user.Account.bidUnit.locked += bidOrder.volume * bidOrder.price * (1 + fee)</p>\n<h3>거래 체결 후</h3>\n<p>askOrder.user.Account.askUnit.locked -= tradeVolume<br/>\naskOrder.user.Account.bidUnit.balance += tradeVolume * tradePrice * (1 - fee)<br/>\nbidOrder.user.askUnit.balance += tradeVolume<br/>\nbidOrder.user.bidUnit.balance += differencePrice * tradeVolume * (1 + fee)<br/>\nbidOrder.user.bidUnit.locked -= (tradeVolume * tradePrice * (1 + fee) + differencePrice * tradeVolume * (1 + fee))\n<br/><br/></p>\n<h2>Case 2. 매수가 먼저 있을 때.</h2>\n<p>tradeVolume = min(askOrder.volume, bidOrder.volume)<br/>\ntradePrice = bidOrder.price<br/>\ndifferencePrice = askOrder.price - tradePrice<br/>\nfee = bidOrder.unit.fee</p>\n<h2>2-1<em>. 매수의 volume이 더 클 때.</em></h2>\n<ul>\n<li>1st. <em>User1</em>이 <em>ETH</em>를 <em>0.3BTC</em>에 <em>100개</em> <em>매수</em></li>\n<li>2nd. <em>User2</em>가 <em>ETH</em>를 <em>0.2BTC</em>에 <em>80개</em> <em>매도</em></li>\n</ul>\n<h3>오더 발생 후</h3>\n<p>bidOrder.user.Account.bidUnit.balance -= bidOrder.volume * tradePrice * (1 + fee)</p>\n<p>bidOrder.user.Account.bidUnit.locked += bidOrder.volume * tradePrice * (1 + fee)</p>\n<p>askOrder.user.Account.askUnit.balance -= askOrder.volume</p>\n<p>askOrder.user.Account.askUnit.locked += askOrder.volume</p>\n<h3>거래 체결 후</h3>\n<p>bidOrder.user.askUnit.balance += tradeVolume</p>\n<p>bidOrder.user.bidUnit.locked -= tradeVolume * tradePrice * (1 + fee)</p>\n<p>askOrder.user.Account.askUnit.locked -= tradeVolume</p>\n<p>askOrder.user.Account.bidUnit.balance += tradeVolume * tradePrice * (1 - fee)</p>\n<h2>2-2<em>. 매도의 volume이 더 클 때.</em></h2>\n<ul>\n<li>1st. <em>User1</em>이 <em>ETH</em>를 <em>0.3BTC</em>에 8<em>0개</em> <em>매수</em></li>\n<li>2nd. <em>User2</em>가 <em>ETH</em>를 <em>0.2BTC</em>에 <em>100개</em> <em>매도</em></li>\n</ul>\n<h3>오더 발생 후</h3>\n<p>bidOrder.user.Account.bidUnit.balance -= bidOrder.volume * tradePrice * (1 + fee)</p>\n<p>bidOrder.user.Account.bidUnit.locked += bidOrder.volume * tradePrice * (1 + fee)</p>\n<p>askOrder.user.Account.askUnit.balance -= askOrder.volume</p>\n<p>askOrder.user.Account.askUnit.locked += askOrder.volume</p>\n<h3>거래 체결 후</h3>\n<p>bidOrder.user.askUnit.balance += tradeVolume</p>\n<p>bidOrder.user.bidUnit.locked -= tradeVolume _ tradePrice _ (1 + fee)</p>\n<p>askOrder.user.Account.askUnit.locked -= tradeVolume</p>\n<p>askOrder.user.Account.bidUnit.balance += tradeVolume _ tradePrice _ (1 - fee)</p>\n<h2>결국, Case1-1과 1-2의 공식은 동일하고, Case2-1과 2-2의 공식도 동일함.</h2>\n<p>Case 1, Case2 만 나누면 되는 것인가.</p>","title":"거래소 잔액 처리 상황에 대한 로직 정리 (2)","date":"2019-10-25 11:00:03","excerpt":"이번편에서는 각 상황마다의 유저 계좌의 변화를 공식으로 정리해보며 의사코드를 작성해보고자 합니다. Case 1. 매도가 먼저 있을 때. tradeVolume = min(askOrder.volume, bidOrder.volume)\ntradePrice = askOrder.price\ndifferencePrice = bidOrder.price - tradePri…"}}}